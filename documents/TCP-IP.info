IP ADDRESS
---------------------------------------------------------------------------------------------------
    Class A         0xxx-xxxx xxxx-xxxx xxxx-xxxx xxxx-xxxx
                    0~127.**.**.**      (16777216万台主机)
    Class B         10xx-xxxx xxxx-xxxx xxxx-xxxx xxxx-xxxx
                    128~191.##.**.**    (65536台主机)
    Class C         110x-xxxx xxxx-xxxx xxxx-xxxx xxxx-xxxx
                    192~255.##.##.**    (255台主机)
    IP地址总数      4294967296,即,约43亿个

    局域网专用地址(私有地址或内网地址)
    A类地址:        10.0.0.0    -   10.255.255.255
    B类地址:        172.16.0.0  -   172.31.255.255
    C类地址:        192.168.0.0 -   192.168.255.255
    以上地址在不同的局域网可以重复使用，但在同一个局域网内，IP不能重复

    特殊地址
    A类系统回环地址:127.0.0.0   -   127.255.255.255
    B类地址:        168.192.0.0 -   168.192.255.255
    B类保留地址:    169.254.0.0 -   169.254.255.255
    D类地址:        224.0.0.0   -   239.255.255.255
    E类地址:        240.0.0.0   -   255.255.255.255
    每个计算机都有一个本地环回接口地址，是127.0.0.1，这个地址用来测试本机的TCP/IP协议栈有没有正确安装

    公网地址(0.0.0.0 ~ 223.255.255.255)
    地址区间中除了以上“局域网专用地址”和“特殊地址”以外的地址即为公网地址
    我们知道IP地址包括公网和专用(私有)两种类型，公网IP地址又称为可全局路由的IP地址，
    是在Internet中使用的IP地址.说白了,公网IP是互联网上认识的，私有的IP是互联网上不认识的，
    只有你自己知道的.公网IP一般是网络运营商分配的.包括固定的和自动分配的.
    一般大点的单位都是专线接入，是用的固定IP，小单位或者家用的，大多是ADSL这种自动分配IP的.
    一般一个入网点使用一个IP.通常是N个局域网IP，通过路由器用一个公网IP对外上网.路由器负责数据包的转发.

    内网地址(也称私网地址、私有地址、局域网专用地址)
    内网也就是局域网，最直观的就是像网吧、公司内部的电脑用交换机、HUB、路由器连接起来，在通过光纤、猫
    接入INTERNET的.内网IP就是国际上分配ip的时候，留出一部分ip,不在internet上用，用于内部局域网等，
    虽然功能一样，但不能在internet上使用.属于非注册地址，专门为组织机构内部使用.
    内网的计算机以NAT(网络地址转换)协议，通过一个公共的网关访问Internet.
    在互联网上有一个叫做NAT的计数，是用来转换地址的，是为了解决公网IP不够用的问题而诞生的.
    例如，你的主机IP地址是192.168.12.1，这个就是一个私有的IP，这个IP是不能被路由的，也就是互联网是
    不认的，这个时候，你去ISP，比如电信，申请一个公网的IP，比如200.176.23.4，这个时候，你在路由器
    上做个NAT，把你的私有IP和你的公网IP做个映射，你就可以上网了，但是现在我们一般采用的是NAPT，
    就是端口映射计数，但在IP地址规划时，内网的计算机可向Internet上的其他计算机发送连接请求，但Internet
    上的其他计算机无法向内网计算机发送连接请求.

    NAT（Network Address Translation，网络地址转换）
    是将IP数据包头中的IP地址转换为另一个IP地址的过程。
    在实际应用中，NAT主要用于实现私有网络访问公共网络的功能。
    这种通过使用少量的公有IP地址代表较多的私有IP地址的方式，将有助于减缓可用IP地址空间的枯竭。
    NAT不仅能解决了IP地址不足的问题，而且还能够有效地避免来自网络外部的攻击，隐藏并保护网络内部的计算机。
        1.  宽带分享：这是NAT主机的最大功能。
        2.  安全防护：NAT 之内的 PC 联机到Internet上面时，他所显示的IP是NAT主机的公共IP，
            所以 Client端的PC当然就具有一定程度的安全了，外界在进行 portscan（端口扫描）的时候，
            就侦测不到源Client端的PC
    NAT的实现方式有三种，即静态转换Static Nat、动态转换Dynamic Nat和端口多路复用OverLoad。
        静态转换是指将内部网络的私有IP地址转换为公有IP地址，IP地址对是一对一的，是一成不变的，
    某个私有IP地址只转换为某个公有IP地址。借助于静态转换，可以实现外部网络对内部网络中某些特定设备
   （如服务器）的访问。
        动态转换是指将内部网络的私有IP地址转换为公用IP地址时，IP地址是不确定的，是随机的，
    所有被授权访问上Internet的私有IP地址可随机转换为任何指定的合法IP地址。
    也就是说，只要指定哪些内部地址可以进行转换，以及用哪些合法地址作为外部地址时，就可以进行动态转换。
    动态转换可以使用多个合法外部地址集。当ISP提供的合法IP地址略少于网络内部的计算机数量时。
    可以采用动态转换的方式。
        端口多路复用（Port address Translation,PAT)是指改变外出数据包的源端口并进行端口转换，
    即端口地址转换（PAT，Port Address Translation).采用端口多路复用方式。
    内部网络的所有主机均可共享一个合法外部IP地址实现对Internet的访问，从而可以最大限度地节约IP地址资源。
    同时，又可隐藏网络内部的所有主机，有效避免来自internet的攻击。
    因此，目前网络中应用最多的就是端口多路复用方式。

    要真正了解NAT就必须先了解现在IP地址的适用情况，私有IP地址是指内部网络或主机的IP地址，
    公有IP地址是指在因特网上全球唯一的IP地址。RFC 1918 为私有网络预留出了三个IP 地址块，如下：
        A 类：10.0.0.0～10.255.255.255
        B 类：172.16.0.0～172.31.255.255
        C 类：192.168.0.0～192.168.255.255
    上述三个范围内的地址不会在因特网上被分配，因此可以不必向ISP或注册中心申请而在公司或企业内部自由使用。
    随着接入Internet的计算机数量的不断猛增，IP地址资源也就愈加显得捉襟见肘。事实上，
    除了中国教育和科研计算机网（CERNET）外，一般用户几乎申请不到整段的C类IP地址。
    在其他ISP那里，即使是拥有几百台计算机的大型局域网用户，当他们申请IP地址时，
    所分配的地址也不过只有几个或十几个IP地址。显然，这样少的IP地址根本无法满足网络用户的需求，
    于是也就产生了NAT技术。虽然NAT可以借助于某些代理服务器来实现，但考虑到运算成本和网络性能，
    很多时候都是在路由器上来实现的。

    NAPT（Network Address Port Translation），即网络端口地址转换，可将多个内部地址映射为一个合法公网地址，
    但以不同的协议端口号与不同的内部地址相对应，也就是<内部地址+内部端口>与<外部地址+外部端口>之间的转换。
    NAPT普遍用于接入设备中，它可以将中小型的网络隐藏在一个合法的IP地址后面。
    NAPT也被称为“多对一”的NAT，或者叫PAT（Port Address Translations，端口地址转换）、
    地址超载（address overloading）。
    NAPT与动态地址NAT不同，它将内部连接映射到外部网络中的一个单独的IP地址上，
    同时在该地址上加上一个由NAT设备选定的TCP端口号。NAPT算得上是一种较流行的NAT变体，
    通过转换TCP或UDP协议端口号以及地址来提供并发性。
    除了一对源和目的IP地址以外，这个表还包括一对源和目的协议端口号，以及NAT盒使用的一个协议端口号。
    NAPT的主要优势在于，能够使用一个全球有效IP地址获得通用性。
    主要缺点在于其通信仅限于TCP或UDP。当所有通信都采用TCP或UDP，
    NAPT允许一台内部计算机访问多台外部计算机，并允许多台内部主机访问同一台外部计算机，相互之间不会发生冲突

    借助于NAT，私有（保留）地址的"内部"网络通过路由器发送数据包时，私有地址被转换成合法的IP地址，
    一个局域网只需使用少量IP地址（甚至是1个）即可实现私有地址网络内所有计算机与Internet的通信需求。
    NAT将自动修改IP报文的源IP地址和目的IP地址，Ip地址校验则在NAT处理过程中自动完成。
    有些应用程序将源IP地址嵌入到IP报文的数据部分中，所以还需要同时对报文的数据部分进行修改，
    以匹配IP头中已经修改过的源IP地址。否则，在报文数据部分嵌入IP地址的应用程序就不能正常工作。
        内部主机    -->     NAT主机     -->     Internet


    静态地址转换的实现
    假设内部局域网使用的lP地址段为192.168.0.1~192.168.0.254，路由器局域网端（即默认网关）的
    IP地址为192.168.0.1，子网掩码为255.255.255.0。网络分配的合法IP地址范围为61.159.62.128~61.159.62.135，
    路由器在广域网中的IP地址为61.159.62.129，子网掩码为255.255.255.248可用于转换的IP地址范围为
    61.159.62.130~61.159.62.134。要求将内部网址192.168.0.2~192.168.0.6分别转换为合法IP地址
    61.159.62.130~61.159.62.134。
    第一步，设置外部端口。
        interface serial 0
        ip address 61.159.62.129 255.255.255.248
        ip nat outside
    第二步，设置内部端口。
        interface ethernet 0
        ip address 192.168.0.1 255.255.255.0
        ip nat inside
    第三步，在内部本地与外部合法地址之间建立静态地址转换。
        ip nat inside source static 内部本地地址 外部合法地址。
        示例：
        //将内部网络地址192.168.0.2转换为合法IP地址61.159.62.130
        ip nat inside source static 192.168.0.2 61.159.62.130
        //将内部网络地址192.168.0.3转换为合法IP地址61.159.62.131
        ip nat inside source static 192.168.0.3 61.159.62.131
        //将内部网络地址192.168.0.4转换为合法IP地址61.159.62.132
        ip nat inside source static 192.168.0.4 61.159.62.132 
        //将内部网络地址192.168.0.5转换为合法IP地址61.159.62.133
        ip nat inside source static 192.168.0.5 61.159.62.133 
        //将内部网络地址192.168.0.6转换为合法IP地址61.159.62.134
        ip nat inside source static 192.168.0.6 61.159.62.134 
        至此，静态地址转换配置完毕。

    动态地址转换的实现
    假设内部网络使用的IP地址段为172.16.100.1~172.16.100.254,路由器局域网端口（即默认网关）的IP地址为
    172.16.100.1，子网掩码为255.255.255.0。网络分配的合法IP地址范围为61.159.62.128~61.159.62.191，
    路由器在广域网中的IP地址为61.159.62.129，子网掩码为255.255.255.192，可用于转换的IP地址范围为
    61.159.62.130~61.159.62.190。要求将内部网址172.16.100.2~172.16.100.254动态转换为合法IP地址
    61.159.62.130~61.159.62.190。
    第一步，设置外部端口。
        设置外部端口命令的语法如下：
        //进入串行端口serial 0
        interface serial 0 
        //将其IP地址指定为61.159.62.129，子网掩码为255.255.255.192
        ip address 61.159.62.129 255.255.255.192
        //将串行口serial 0设置为外网端口
        ip nat outside 
        注意，可以定义多个外部端口。
    第二步，设置内部端口。
        设置内部接口命令的语法如下：
        interface ethernet 0                        //进入以太网端口Ethernet 0
        ip address 172.16.100.1 255.255.255.0       // 将其IP地址指定为172.16.100.1，子网掩码为255.255.255.0
        ip nat inside //将Ethernet 0 设置为内网端口。
        注意，可以定义多个内部端口。
    第三步，定义合法IP地址池。
        定义合法IP地址池命令的语法如下：
        ip nat pool 地址池名称起始IP地址 终止IP地址子网掩码
        其中，地址池名字可以任意设定。
        //指明地址缓冲池的名称为chinanet,IP地址范围为61.159.62.130~61.159.62.190，
        //子网掩码为255.255.255.192。需要注意的是，即使掩码为255.255.255.0，
        //也会由起始IP地址和终止IP地址对IP地址池进行限制。
        ip nat pool chinanet 61.159.62.130 61.159.62.190 netmask 255.255.255.192 
        或
        ip nat pool test 61.159.62.130 61.159.62.190 prefix-length 26
        注意，如果有多个合法IP地址范围，可以分别添加。例如，如果还有一段合法IP地址范围为
        "211.82.216.1~211.82.216.254"，那么，可以再通过下述命令将其添加至缓冲池中。
        ip nat pool cernet 211.82.216.1 211.82.216.254 netmask 255.255.255.0
        或
        ip nat pool test 211.82.216.1 211.82.216.254 prefix-length 24
    第四步，定义内部网络中允许访问Internet的访问列表。
        定义内部访问列表命令的语法如下：
        access-list 标号 permit 源地址通配符（其中，标号为1~99之间的整数）
        //允许访问Internet的网段为172.16.100.0~172.16.100.255，反掩码为0.0.0.255。
        //需要注意的是，在这里采用的是反掩码，而非子网掩码。反掩码与子网掩码的关系为：
        //反掩码+子网掩码=255.255.255.255。例如，子网掩码为255.255.0.0，
        //则反掩码为0.0.255.255；子网掩码为255.0.0.0，则反掩码为0.255.255.255；
        //子网掩码为255.252.0.0，则反掩码为0.3.255.255；
        //子网掩码为255.255.255.192，则反掩码为0.0.0.63。
        access-list 1 permit 172.16.100.0 0.0.0.255 
        另外，如果想将多个IP地址段转换为合法IP地址，可以添加多个访问列表。
        例如，当欲将172.16.98.0~172.16.98.255和172.16.99.0~172.16.99.255转换为合法IP地址时，
        应当添加下述命令：
        access-list2 permit 172.16.98.0 0.0.0.255
        access-list3 permit 172.16.99.0 0.0.0.255
    第五步，实现网络地址转换。
        在全局设置模式下，将第四步由access-list指定的内部本地地址列表与第三步指定的合法IP地址池进行地址转换。
        命令语法如下：
        ip nat inside source list 访问列表标号 pool 内部合法地址池名字
        示例：
        ip nat inside source list 1 pool chinanet
        如果有多个内部访问列表，可以一一添加，以实现网络地址转换，如
        ip nat inside source list 2 pool chinanet
        ip nat inside source list 3 pool chinanet
        如果有多个地址池，也可以一一添加，以增加合法地址池范围，如
        ip nat inside source list 1 pool cernet
        ip nat inside source list 2 pool cernet
        ip nat inside source list 3 pool cernet
        至此，动态地址转换设置完毕。


    在计算机网络中，网络地址转换（Network Address Translation或简称NAT），也叫做网络掩蔽或者IP掩蔽
    （IP masquerading），是一种在IP封包通过路由器或防火墙时重写源IP地址或目的IP地址的技术。
    这种技术被普遍使用在有多台主机但只通过一个公有IP地址访问因特网的私有网络中。
    根据规范，路由器是不能这样工作的，但它的确是一个方便并得到了广泛应用的技术。
    当然，NAT也让主机之间的通信变得复杂，导致通信效率的降低。

    基本网络地址转换（Basic NAT）
        内网IP          外网IP
        192.168.1.55    219.152.168.222
        192.168.1.59    219.152.168.223
        192.168.1.155   219.152.168.224
    网络地址端口转换（NAPT）
        内网IP              外网IP
        192.168.1.55:5566   219.152.168.222:9200
        192.168.1.59:80     219.152.168.222:9201
        192.168.1.59:4465   219.152.168.222:9202

网关
---------------------------------------------------------------------------------------------------
    网关（英语：Gateway；台湾、港澳作闸道器）
    区别于路由器（由于历史的原因，许多有关TCP/IP的文献曾经把网络层使用的路由器（英语：Router）称为网关，
    在今天很多局域网采用都是路由来接入网络，因此现在通常指的网关就是路由器的IP），
    经常在家庭中或者小型企业网络中使用，用于连接局域网和Internet。
    网关也经常指把一种协议转成另一种协议的设备，比如语音网关。

    在传统TCP/IP术语中，网络设备只分成两种，一种为网关（gateway），另一种为主机（host）。
    网关能在网络间转递数据包，但主机不能转送数据包。在主机（又称终端系统，end system）中，
    数据包需经过TCP/IP四层协议处理，但是在网关（又称中介系统，intermediate system）
    只需要到达网际层（Internet layer），决定路径之后就可以转送。
    在当时，网关（gateway）与路由器（router）还没有区别。
    在现代网络术语中，网关（gateway）与路由器（router）的定义不同。
    网关（gateway）能在不同协议间移动数据，而路由器（router）是在不同网络间移动数据，
    相当于传统所说的IP网关（IP gateway）。
    网关顾名思义就是连接两个网络的设备，对于语音网关来说，他可以连接PSTN网络和以太网，
    这就相当于VOIP，把不同电话中的模拟信号通过网关而转换成数字信号，而且加入协议再去传输。
    在到了接收端的时候再通过网关还原成模拟的电话信号，最后才能在电话机上听到。
    对于以太网中的网关只能转发三层以上数据包，这一点和路由是一样的。而不同的是网关中并没有路由表，
    他只能按照预先设定的不同网段来进行转发。网关最重要的一点就是端口映射，
    子网内用户在外网看来只是外网的IP地址对应着不同的端口，这样看来就会保护子网内的用户。

    网关（Gateway）就是一个网络连接到另一个网络的“关口”。
    在Internet网中，网关是一种连接内部网与Internet上其它网的中间设备，也称“路由器”。
    只有设置好网关的IP地址，TCP/IP协议才能实现不同网络之间的相互通信。
    那么这个IP地址是哪台机器的IP地址呢？网关的IP地址是具有路由功能的设备的IP地址，
    具有路由功能的设备有路由器、启用了路由协议的服务器（实质上相当于一台路由器）、
    代理服务器（也相当于一台路由器）。

    将网络互相连接起来要使用一些中间设备（或中间系统），ISO的术语称之为中继（relay）系统。
    根据中继系统所在的层次，可以有以下五种中继系统： 　　
        1.  物理层（即常说的第一层、层L1）中继系统，即转发器（repeater）。
        2.  数据链路层（即第二层，层L2），即网桥或桥接器（bridge）。 　　
        3.  网络层（第三层，层L3）中继系统，即路由器（router）。 　　
        4.  网桥和路由器的混合物桥路器（brouter）兼有网桥和路由器的功能。 　　
        5.  在网络层以上的中继系统，即网关（gateway）。 　　
    当中继系统是转发器时，一般不称之为网络互联，因为这仅仅是把一个网络扩大了，而这仍然是一个网络。
    高层网关由于比较复杂，目前使用得较少。因此一般讨论网络互连时都是指用交换机和路由器进行互联的网络。
    交换机(Switch)
        是一种基于MAC（网卡的硬件地址）识别，能完成封装转发数据包功能的网络设备。
        交换机可以“学习”MAC地址，并把其存放在内部地址表中，通过在数据帧的始发者和目标接收者之间
        建立临时的交换路径，使数据帧直接由源地址到达目的地址。现在的交换机分为：
        二层交换机，三层交换机或是更高层的交换机。
        三层交换机同样可以有路由的功能，而且比低端路由器的转发速率更快。
        它的主要特点是：一次路由，多次转发。
    路由器(Router)亦称选径器，是在网络层实现互连的设备。
        它比网桥更加复杂，也具有更大的灵活性。路由器有更强的异种网互连能力，连接对象包括局域网和广域网。
        过去路由器多用于广域网，近年来，由于路由器性能有了很大提高，价格下降到与网桥接近，
        因此在局域网互连中也越来越多地使用路由器。路由器是一种连接多个网络或网段的网络设备，
        它能将不同网络或网段之间的数据信息进行“翻译”，以使它们能够相互“读”懂对方的数据，
        从而构成一个更大的网络。路由器有两大典型功能，即数据通道功能和控制功能。
        数据通道功能包括转发决定、背板转发以及输出链路调度等，一般由特定的硬件来完成；
        控制功能一般用软件来实现，包括与相邻路由器之间的信息交换、系统配置、系统管理等。 　　
    就路由器与交换机来说，主要区别体现在以下几个方面： 　　
       （1）工作层次不同 　　
            最初的的交换机是工作在OSI/RM开放体系结构的数据链路层，也就是第二层，
            而路由器一开始就设计工作在OSI模型的网络层。由于交换机工作在OSI的第二层（数据链路层），
            所以它的工作原理比较简单，而路由器工作在OSI的第三层（网络层），可以得到更多的协议信息，
            路由器可以做出更加智能的转发决策。 　　
       （2）数据转发所依据的对象不同 　　
            交换机是利用物理地址或者说MAC地址来确定转发数据的目的地址。
            而路由器则是利用不同网络的ID号（即IP地址）来确定数据转发的地址。
            IP地址是在软件中实现的，描述的是设备所在的网络，有时这些第三层的地址也称为协议地址或者网络地址。
            MAC地址通常是硬件自带的，由网卡生产商来分配的，而且已经固化到了网卡中去，一般来说是不可更改的。
            而IP地址则通常由网络管理员或系统自动分配。 　　
       （3）传统的交换机只能分割冲突域，不能分割广播域；而路由器可以分割广播域 　　
            由交换机连接的网段仍属于同一个广播域，广播数据包会在交换机连接的所有网段上传播，
            在某些情况下会导致通信拥挤和安全漏洞。连接到路由器上的网段会被分配成不同的广播域，
            广播数据不会穿过路由器。虽然第三层以上交换机具有VLAN功能，也可以分割广播域，
            但是各子广播域之间是不能通信交流的，它们之间的交流仍然需要路由器。 　　
       （4）路由器提供了防火墙的服务 　　
            路由器仅仅转发特定地址的数据包，不传送不支持路由协议的数据包传送和未知目标网络数据包的传送，
            从而可以防止广播风暴。 　　
        交换机一般用于LAN-WAN的连接，交换机归于网桥，是数据链路层的设备，有些交换机也可实现第三层的交换。
        路由器用于WAN-WAN之间的连接，可以解决异性网络之间转发分组，作用于网络层。
        他们只是从一条线路上接受输入分组，然后向另一条线路转发。这两条线路可能分属于不同的网络，
        并采用不同协议。相比较而言，路由器的功能较交换机要强大，但速度相对也慢，价格昂贵，
        第三层交换机既有交换机线速转发报文能力，又有路由器良好的控制功能，因此得以广泛应用。


无线接入点
---------------------------------------------------------------------------------------------------
    无线AP即无线接入点 。
    它是一个无线网络的接入点，主要有路由交换接入一体设备和纯接入点设备，一体设备执行接入和路由工作，
    纯接入设备只负责无线客户端的接入，纯接入设备通常作为无线网络扩展使用，与其他AP或者主AP连接，
    以扩大无线覆盖范围，而一体设备一般是无线网络的核心。
    无线AP是使用无线设备（手机等移动设备及笔记本电脑等无线设备）用户进入有线网络的接入点，
    主要用于宽带家庭、大楼内部、校园内部、园区内部以及仓库、工厂等需要无线监控的地方，
    典型距离覆盖几十米至上百米，也有可以用于远距离传送，目前最远的可以达到30KM左右，
    主要技术为IEEE802.11系列。大多数无线AP还带有接入点客户端模式（AP client），
    可以和其它AP进行无线连接，延展网络的覆盖范围。

    无线AP与无线路由器的区别
    功能不同
        无线AP:AP全称是Access Point，其功能是把有线网络转换为无线网络。
        形像点说，无线AP是无线网和有线网之间沟通的桥梁。其信号范围为球形，搭建的时候最好放到比较高的地方，
        可以增加覆盖范围，无线AP也就是一个无线交换机，接入在有线交换机或是路由器上，
        接入的无线终端和原来的网络是属于同一个子网。
        无线路由器就是一个带路由功能的无线AP，接入在ADSL宽带线路上，通过路由器功能实现自动拨号接入网络，
        并通过无线功能，建立一个独立的无线家庭组网。
    应用不同
        无线AP应用于大型公司比较多，大的公司需要大量的无线访问节点实现大面积的网络覆盖，
        同时所有接入终端都属于同一个网络，也方便公司网络管理员简单地实现网络控制和管理。
    　　无线路由器一般应用于家庭和SOHO环境网络，这种情况一般覆盖面积和使用用户都不大，
        只需要一个无线AP就够用了。无线路由器可以实现ADSL网络的接入，同时转换为无线信号，
        比起买一个路由器加一个无线AP，无线路由器是一个更为实惠和方便的选择。
    连接方式不同
        无线AP不能与ADSL MODE相连，要用一个交换机或是集线器或者路由器做为中介。
        而无线路由器带有宽带拨号功能，可以直接和ADSL MODEM相连拨号上网，实现无线覆盖。
    AP即Access Point(无线发射点)的简称，
        它相当于有线网络中的交换机，将其接到你的路由器或者交换机上面，
        它就可以将你的有线网络转换成无线信号，让你的电脑或者IPAD或者安卓手机接收信号，连接到互联网.
    Wireless AP Client(无线客户端)
        它相当于带有RJ45口的无线网卡，可以接收无线路由或者无线AP发射出来的信号，
        并将它转换为有线信号输出！后面加个交换机或者HUB可为多台网络设备提供数据交换.
        工作在Client模式下的设备接收无线信号，但不会向外发射无线信号.
    Wireless Bridge(无线网桥或者多点桥)
        这种模式下，可以多个无线AP相互连接起来！组成一个可以互访的局域网，每个AP后面可以加装交互即等设备
        工作在Bridge模式下的设备用无线网卡搜索不到其发射的无线信号.
    Wireless Repeater(无线中继)
        无线中继器模式可以实现信号的中继和放大，从而延伸无线网络的覆盖范围.各AP之间可以通过设定MAC地址
        来互相连接.当两个局域网络的距离超过了无线局域网产品所允许的最大传输距离，或者在两个网络之间有较高、
        较大干扰的障碍物存在时，便可以采用无线中继方案来扩展无线网络覆盖.
        工作在Repeater模式下的设备LAN口一般就没数据输出了.


linux网络编程常用函数详解与实例（socket-->bind-->listen-->accept）
===================================================================================================
常用的网络命令： netstat telnet
    命令netstat是用来显示网络的连接,路由表和接口统计等网络的信息.netstat有许多的选项我们常用的选项是 
    -an 用来显示详细的网络状态.至于其它的选项我们可以使用帮助

    telnet是一个用来远程控制的程序,但是我们完全可以用这个程序来调试我们的服务端程序的. 比如我们的服务器程序在监听8888端口,
    我们可以用telnet localhost 8888来查看服务端的状况.

网络函数描述和实例： int socket(int domain, int type,int protocol)
    domain:     说明我们网络程序所在的主机采用的通讯协族(AF_UNIX和AF_INET等). AF_UNIX只能够用于单一的Unix系统进程间通信,
                而AF_INET是针对Internet的,因而可以允许在远程主机之间通信
    type:       我们网络程序所采用的通讯协议(SOCK_STREAM,SOCK_DGRAM等) SOCK_STREAM表明我们用的是TCP协议,
                这样会提供按顺序的,可靠,双向,面向连接的比特流. SOCK_DGRAM 表明我们用的是UDP协议,
                这样只会提供定长的,不可靠,无连接的通信.
    protocol:   由于我们指定了type,所以这个地方我们一般只要用0来代替就可以了
    socket为网络通讯做基本的准备.成功时返回文件描述符,失败时返回-1,看errno可知道出错的详细情况

    int bind(int sockfd, struct sockaddr *my_addr, int addrlen)
    sockfd:     是由socket调用返回的文件描述符.
    addrlen:    是sockaddr结构的长度.
    my_addr:    是一个指向sockaddr的指针. 在中有 sockaddr的定义
    struct sockaddr{
        unisgned short as_family;
        char sa_data[14];
    };
    不过由于系统的兼容性,我们一般不用这个头文件,而使用另外一个结构(struct sockaddr_in) 来代替.在中有sockaddr_in的定义
    struct sockaddr_in{
        unsigned short sin_family;
        unsigned short int sin_port;
        struct in_addr sin_addr;
        unsigned char sin_zero[8];
    }
    我们主要使用Internet所以sin_family一般为AF_INET,sin_addr设置为INADDR_ANY表示可以和任何的主机通信,
    sin_port是我们要监听的端口号.sin_zero[8]是用来填充的. bind将本地的端口同socket返回的文件描述符捆绑在一起.
    成功是返回0,失败的情况和socket一样

    int listen(int sockfd,int backlog)
    sockfd:     是bind后的文件描述符.
    backlog:    设置请求排队的最大长度.当有多个客户端程序和服务端相连时, 使用这个表示可以介绍的排队长度. 
                listen函数将bind的文件描述符变为监听套接字.返回的情况和bind一样.

    int accept(int sockfd, struct sockaddr *addr,int *addrlen)
    sockfd:     是listen后的文件描述符.
    addr,addrlen是用来给客户端的程序填写的,服务器端只要传递指针就可以了. bind,listen和accept是服务器端用的函数,
                accept调用时,服务器端的程序会一直阻塞到有一个客户程序发出了连接. accept成功时返回最后的服务器端的文件描述符,
                这个时候服务器端可以向该描述符写信息了. 失败时返回-1

    int connect(int sockfd, struct sockaddr * serv_addr,int addrlen)
    sockfd:     socket返回的文件描述符.
    serv_addr:  储存了服务器端的连接信息.其中sin_add是服务端的地址
    addrlen:    serv_addr的长度
    connect函数是客户端用来同服务端连接的.成功时返回0,sockfd是同服务端通讯的文件描述符失败时返回-1
    总的来说网络程序是由两个部分组成的--客户端和服务器端.它们的建立步骤一般是:

    服务器端
                socket-->bind-->listen-->accept
    客户端
                socket-->connect
